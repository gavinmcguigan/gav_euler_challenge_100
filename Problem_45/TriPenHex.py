from globs import *

"""
    Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

    Triangle	 	Tn=n(n+1)/2	 	    1, 3, 6, 10, 15, ...
    Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
    Hexagonal	 	Hn=n(2n−1)	 	    1, 6, 15, 28, 45, ...
    
    It can be verified that T285 = P165 = H143 = 40755.
    
    Find the next triangle number that is also pentagonal and hexagonal.

"""

# It appears that all hex numbers are a subset of triangle numbers, so let's just check hex nums against pent nums.


def check_if_pentagon_num(n):
    sq = sqrt(1+24*n)
    return True if not (1 + sq) % 6 else False


def gen_hex_numbers(start=0, stop=10):
    n = start
    while True:
        n += 1
        hex_num = n*(2*n-1)
        yield n, int(hex_num)
        if n > stop:
            break


def main():
    a = None
    for n3, h in gen_hex_numbers(start=144, stop=100000):
        if check_if_pentagon_num(h):
            a = h
            break
    return a


if __name__ == '__main__':
    answer = main()
    show_answer(answer)
